#!/bin/bash

set -e

DOWNLOADED_SCRIPTS_DIR="/tmp/otc-task-script-cache"

if [ -z "$REPOSITORY_BASE_URL"]
then
	REPOSITORY_BASE_URL="https://raw.githubusercontent.com/OleConsignado/otc-vsts-agent-tasks"
fi

if ! [ -d "$DOWNLOADED_SCRIPTS_DIR" ]
then
	mkdir "$DOWNLOADED_SCRIPTS_DIR"
fi

function usage
{
	echo "Usage: "
	echo "   $0 [--always-download] [--debug] [--bash-login] [--download-only] VERSION_PATH_SEGMENT SCRIPT_PATH_SEGMENT [SCRIPT_ARGS ...]"
	echo "Example: "
	echo "   $0 v1 build.sh Debug"
}

ALWAYS_DOWNLOAD=false

if ! [ -z "$OTC_TASK_ALWAYS_DOWNLOAD" ] && $OTC_TASK_ALWAYS_DOWNLOAD
then # parent script called with --always-download
	ALWAYS_DOWNLOAD=true
fi

BASH_DEBUG=false
BASH_LOGIN=false
DOWNLOAD_ONLY=false

# arguments handling
# based on https://gist.github.com/jehiah/855086#file-simple_args_parsing-sh
while [[ "$1" == "--"* ]]
do
	case "$1" in
		--always-download)
			ALWAYS_DOWNLOAD=true
			;;
		--debug)
			BASH_DEBUG=true			
			;;
		--bash-login)
			BASH_LOGIN=true
			;;
		--download-only)
			DOWNLOAD_ONLY=true
			;;
		*)
			echo "Unknow parameter '$1'" >> /dev/stderr
			usage >> /dev/stderr
			exit 4
			;;
	esac
	shift
done

# Expose to be read on nested otc-task invokation
export OTC_TASK_ALWAYS_DOWNLOAD=$ALWAYS_DOWNLOAD

VERSION_PATH_SEGMENT="$1"
SCRIPT_PATH_SEGMENT="$2"

if [ -z "$VERSION_PATH_SEGMENT" ] || [ -z "$SCRIPT_PATH_SEGMENT" ]
then
	usage >> /dev/stderr

	exit 3
fi

shift 2

# Expose VERSION_PATH_SEGMENT in order to be used on nested otc-task invokation
export OTC_TASK_VERSION_PATH_SEGMENT=$VERSION_PATH_SEGMENT

SCRIPT_URL="${REPOSITORY_BASE_URL}/$VERSION_PATH_SEGMENT/$SCRIPT_PATH_SEGMENT"
SCRIPT_IDENTIFIER=$(echo "$VERSION_PATH_SEGMENT-$SCRIPT_PATH_SEGMENT" | sed 's/[^a-zA-Z0-9.-]*//g')
SCRIPT_URL_SHA1=$(echo $SCRIPT_URL | sha1sum -t | awk '{ print $1 }')
SCRIPT_LOCAL_NAME="${SCRIPT_IDENTIFIER}-${SCRIPT_URL_SHA1}"
SCRIPT_FULL_PATH="${DOWNLOADED_SCRIPTS_DIR}/$SCRIPT_LOCAL_NAME"

if ! [ -f "$SCRIPT_FULL_PATH" ] || $ALWAYS_DOWNLOAD
then
	if ! curl -f -s -H 'Cache-Control: no-cache, no-store, must-revalidate' "$SCRIPT_URL?n=$(date +%s)" \
		-o "$SCRIPT_FULL_PATH"
	then
		echo "Error downloading '$SCRIPT_URL'." >> /dev/stderr
		exit 4
	fi
fi

if $DOWNLOAD_ONLY
then
	cat "$SCRIPT_FULL_PATH"
else
	BASH_ARGS=""

	if $BASH_LOGIN
	then
		BASH_ARGS="$BASH_ARGS -l"
	fi

	if $BASH_DEBUG
	then
		BASH_ARGS="$BASH_ARGS -x"
	fi	
	bash $BASH_ARGS "$SCRIPT_FULL_PATH" $@
fi
